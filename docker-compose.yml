version: '3.8'

services:
  db:
    image: postgres:13
    container_name: postgres
    environment:
      POSTGRES_DB: ecommerce
      POSTGRES_USER: ecommerceuser
      POSTGRES_PASSWORD: ecommercedbpassword
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

  web:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        REACT_APP_BACKEND_URL: 'http://3.72.75.83:8000'
    image: skudsi/ecommerce-django-react-web:latest
    container_name: web
    environment:
      - DEBUG=1
      - DJANGO_SETTINGS_MODULE=backend.settings
      - PYTHONPATH=/app:/app/backend:/app/base
      - POSTGRES_DB=ecommerce
      - POSTGRES_USER=ecommerceuser
      - POSTGRES_PASSWORD=ecommercedbpassword
      - POSTGRES_HOST=db
      - REACT_APP_BACKEND_URL=http://3.72.75.83:8000
    volumes:
      - ./backend:/app/backend
      - ./base:/app/base
      - ./requirements.txt:/app/requirements.txt
      - ./manage.py:/app/manage.py
      - ./static:/app/static
      - ./media:/app/media
      - ./staticfiles:/app/staticfiles
      - ./data_dump.json:/tmp/data_dump.json
    depends_on:
      - db
    networks:
      - app-network

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./config/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./static:/home/ubuntu/ecommerce-django-react/staticfiles
      - ./media:/home/ubuntu/ecommerce-django-react/media
    depends_on:
      - web
    networks:
      - app-network

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge
