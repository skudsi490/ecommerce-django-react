version: '3.8'

services:
  db:
    image: postgres:13
    container_name: postgres
    environment:
      POSTGRES_DB: ecommerce
      POSTGRES_USER: ecommerceuser
      POSTGRES_PASSWORD: ecommercedbpassword
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

  web:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        REACT_APP_BACKEND_URL: 'http://3.76.217.10:8000'
    image: skudsi/ecommerce-django-react-web:latest
    container_name: web
    environment:
      - DEBUG=1
      - DJANGO_SETTINGS_MODULE=backend.settings
      - PYTHONPATH=/app:/app/backend:/app/base
      - POSTGRES_DB=ecommerce
      - POSTGRES_USER=ecommerceuser
      - POSTGRES_PASSWORD=ecommercedbpassword
      - POSTGRES_HOST=db
      - REACT_APP_BACKEND_URL=http://3.76.217.10:8000
    volumes:
      - /home/ubuntu/ecommerce-django-react/backend:/app/backend
      - /home/ubuntu/ecommerce-django-react/base:/app/base
      - /home/ubuntu/ecommerce-django-react/requirements.txt:/app/requirements.txt
      - /home/ubuntu/ecommerce-django-react/manage.py:/app/manage.py
      - /home/ubuntu/ecommerce-django-react/static:/app/static
      - /home/ubuntu/ecommerce-django-react/media:/app/media
      - /home/ubuntu/ecommerce-django-react/staticfiles:/app/staticfiles
      - /home/ubuntu/ecommerce-django-react/data_dump.json:/tmp/data_dump.json
    depends_on:
      - db
    ports:
      - "8000:8000"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/ || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - app-network

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge
