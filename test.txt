stages {
        stage('Run Tests in Docker') {
            steps {
                script {
                    sh '''
                    echo "Building Docker image..."
                    docker build -t ${DOCKER_IMAGE} -f Dockerfile .

                    echo "Removing existing container if it exists..."
                    docker rm -f ${CONTAINER_NAME} || true

                    echo "Running tests in Docker container..."
                    docker run --name ${CONTAINER_NAME} -d ${DOCKER_IMAGE}

                    echo "Executing tests..."
                    docker exec ${CONTAINER_NAME} sh -c "
                        pytest tests/api/ --junitxml=/app/report.xml --html=/app/report.html --self-contained-html | tee /app/test_output.log
                    "

                    echo "Copying test reports from Docker container to Jenkins workspace..."
                    docker cp ${CONTAINER_NAME}:/app/report.html ./report.html
                    docker cp ${CONTAINER_NAME}:/app/report.xml ./report.xml
                    docker cp ${CONTAINER_NAME}:/app/test_output.log ./test_output.log

                    echo "Listing copied files..."
                    ls -l report.html report.xml test_output.log

                    echo "Stopping and removing Docker container..."
                    docker stop ${CONTAINER_NAME}
                    docker rm ${CONTAINER_NAME}
                    '''
                }
            }
        }

        stage('Publish Test Report') {
            steps {
                script {
                    publishHTML(target: [
                        allowMissing: false,
                        alwaysLinkToLastBuild: true,
                        keepAll: true,
                        reportDir: '.',
                        reportFiles: 'report.html',
                        reportName: 'Test Report',
                        reportTitles: 'Test Report'
                    ])
                }
            }
        }
    }
